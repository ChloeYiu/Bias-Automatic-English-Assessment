This directory contains code to the run the BERT neural grader from Vyas Raina
http://mi.eng.cam.ac.uk/raven/babel/UGrad_kmk/vr313/raina_vr313_final_report.pdf

The example given under directory est/ is for use of 
Directory structure:
CMDs/  - cached records of command line calls to tools
est/   - example of model training and evaluation: transcriptions generated by EST Ltd
         as used for SLaTE 2023 paper: https://www.isca-archive.org/slate_2023/banno23_slate.pdf
         training set: LIESTgrp06
	 validation/calibration set: LIESTcal01
	 test sets: LIESTdev02 (LinGen), LIESTdev03 (LinBus)
	 http://mi.eng.cam.ac.uk/raven/esol/stats/Linguaskill_v2_index.html
lib/   - library files used by code
local/ - code to train. evaluate and score BERT neural grader
LOGs/  - output logs of code runs


To use from the command line:
a) set the conda environment
linux> source activate /scratches/dialfs/kmk/anaconda3/envs/whisper39

b) if running on a GPU machine air210-air213 set the CUDA_VISIBLE_DEVICES
linux> export CUDA_VISIBLE_DEVICES=0,1
(if a job is running on device 0 then set this to 1 only)


## Scripts

**Shell scripts**
local/run

| Script Name           | Description                                             |
|-----------------------|---------------------------------------------------------|
| run_calibrate.sh      | shell script to run calibrate.py                        |
| run_eval_calibrate.sh | shell script to run eval_all_calibrate.py               |
| run_eval_ensemble.sh  | shell script to run eval_all.py                         |
| run_train_grader.sh   | shell script to train BERT neural text grader model(s)  |

**Python scripts**

| Script Name           | Description                                             |
|-----------------------|---------------------------------------------------------|
| calibrate.py          | calculate the calibration coefficients to apply         |
| eval_all_calibrate.py | calibrate predicted scores and evaluate                 |
| eval_all.py           | evalulate predicted score over all parts                |
| eval_ensemble.py      | evaluate ensemble of models for a part                  |
| train.py              | train BERT grader model                                 |

**Steps**

For all select path range 1:1 to restrict to part 1

1. Training:
  local/run/run_train_grader.sh  

2. Run inference:
  local/run/run_eval_ensemble.sh

3. Calculate calibration coefficients:
  local/run/run_calibrate.sh

4. Apply calibration to predicted scores and re-evaluate:
  local/run/run_eval_calibrate.sh


   

